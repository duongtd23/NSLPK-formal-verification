--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv0(init,a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv14 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,r2) implies inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv8 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r1 = intru) = false .
  red inv8(s,r1) implies inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv0(s,a,b,n,n2) implies inv0(gBasic(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq a = intru .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true, use inv6 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r1 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r1) implies inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r1 || b))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq (n2 = r1) = false .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true, use inv3 as a lemma
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv3(s,r6) implies inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> Time taken is 3367ms