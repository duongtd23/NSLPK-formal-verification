--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv0(init,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv14 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,r2) implies inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv8 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r1 = intru) = false .
  red inv8(s,r1) implies inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in r2) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv0(s,a,b,n,n2) implies inv0(gBasic(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq a = intru .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r1 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r1) implies inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n2 = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r1 || b))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq (n2 = r1) = false .
  red inv0(s,a,b,n,n2) implies inv0(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true, use inv3 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv3(s,r6) implies inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (r6 \in knl(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv0(s,a,b,n,n2) implies inv0(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv0(s,a,b,n,n2) implies inv0(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> Time taken is 3367ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op s : -> Sys .
  red inv1(init,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(fkmsg1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(fkmsg1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(fkmsg2(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(fkmsg2(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(fkmsg3(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(fkmsg3(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(g2(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g2(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g2(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true, use inv4 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = true .
  red inv4(s,a,b,n,r2) implies inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = true .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq r1 = intru .
  eq (priK(intru) \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true, use inv8 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r1 = intru) = false .
  red inv8(s,r1) implies inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in r2) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(g21(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv1(s,a,b,n) implies inv1(gBasic(s,r1,r2),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n = r1 .
  eq a = intru .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n = r1 .
  eq (a = intru) = false .
  eq b = intru .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = true .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r1))) \in nw(s)) = true .
  red inv2(s,a,a,b,r1) implies inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq n = r1 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r1))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq (n = r1) = false .
  red inv1(s,a,b,n) implies inv1(gNonce(s,r1),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (r3 \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true, use inv3 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (r3 \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv3(s,r3) implies inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (r3 \in knl(s)) = false .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  red inv1(s,a,b,n) implies inv1(send1(s,r1,r2,r3),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv1(s,a,b,n) implies inv1(send2(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv1(s,a,b,n) implies inv1(send2(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv1(send2(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv1(s,a,b,n) implies inv1(send2(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv1(s,a,b,n) implies inv1(send3(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv1(send3(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv1(send3(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv1(s,a,b,n) implies inv1(send3(s,r1,r2,r3,r4,r5,r6),a,b,n) .
close

--> Time taken is 2307ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op s : -> Sys .
  red inv10(init,a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq a = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n)) .
  eq (aenc(pubK(r2),(intru || n)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || n))) \in nw(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true, use inv11 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n)) .
  eq (aenc(pubK(r2),(intru || n)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || n))) \in nw(s)) = false .
  red inv11(s,a,b,r2,n) implies inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n)) .
  eq (aenc(pubK(r2),(intru || n)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n)) .
  eq (aenc(pubK(r2),(intru || n)) \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 = aenc(pubK(r2),(intru || n))) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq (b2 = r2) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a2 = intru) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(g2(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(g2(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(g2(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(g21(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(g21(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(g21(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv10(s,a,b,a2,b2,n) implies inv10(gBasic(s,r1,r2),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(gNonce(s,r1),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(gNonce(s,r1),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r3))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r3))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv2(s,a2,intru,b2,r3) implies inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r3))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq a = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq b = intru .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || r3))) \in nw(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || r3))) \in nw(s)) = false .
  red inv2(s,a,a,b,r3) implies inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq (n = r3) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq a2 = r1 .
  eq (b2 = r2) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq (a2 = r1) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send1(s,r1,r2,r3),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv10(s,a,b,a2,b2,n) implies inv10(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv10(s,a,b,a2,b2,n) implies inv10(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n) .
close

--> Time taken is 449ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op s : -> Sys .
  red inv11(init,a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg2(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg2(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg3(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(fkmsg3(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true, use inv1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  red inv1(s,a,b,n) implies inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n) .
  eq (intru \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq (r2 = (intru || n)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(b2)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g2(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(b2),(intru || n)),r2,knl(s)) implies inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,b2,r2,(intru || n)) implies inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n)) \in r2) = false .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(g21(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv11(s,a,b,b2,n) implies inv11(gBasic(s,r1,r2),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(gNonce(s,r1),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(gNonce(s,r1),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(intru || r3)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(intru || r3)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv5(s,b2,r3,(intru || r3)) implies inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(intru || r3)) \in knl(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq a = intru .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq b = intru .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = true .
  red inv2(s,a,a,b,r3) implies inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq (n = r3) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  eq (b2 = r2) = false .
  red inv11(s,a,b,b2,n) implies inv11(send1(s,r1,r2,r3),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv11(s,a,b,b2,n) implies inv11(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv11(s,a,b,b2,n) implies inv11(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv11(s,a,b,b2,n) implies inv11(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv11(s,a,b,b2,n) implies inv11(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n) .
close

--> Time taken is 20958ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv12(init,a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq a = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n2 || n || intru)) .
  eq (aenc(pubK(r2),(n2 || n || intru)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(n2 || n || intru))) \in nw(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true, use inv13 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n2 || n || intru)) .
  eq (aenc(pubK(r2),(n2 || n || intru)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(n2 || n || intru))) \in nw(s)) = false .
  red inv13(s,a,b,r2,n,n2) implies inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n2 || n || intru)) .
  eq (aenc(pubK(r2),(n2 || n || intru)) \in knl(s)) = true .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n2 || n || intru)) .
  eq (aenc(pubK(r2),(n2 || n || intru)) \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 = aenc(pubK(r2),(n2 || n || intru))) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq (b2 = r2) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a2 = intru) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(gBasic(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(gNonce(s,r1),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(gNonce(s,r1),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n2 || r3 || intru))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n2 || r3 || intru))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv6(s,a2,intru,b2,n2,r3) implies inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n2 || r3 || intru))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq a = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq b = intru .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv2(s,a,a,b,r6) implies inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq (n2 = r5) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n = r6) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a2 = r3 .
  eq (b2 = r2) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a2 = r3) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv12(s,a,b,a2,b2,n,n2) implies inv12(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> Time taken is 817ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv13(init,a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use inv1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  red inv1(s,a,b,n) implies inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = true .
  eq (n \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n2 || n || intru) .
  eq (intru \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq (r2 = (n2 || n || intru)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(b2)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(b2),(n2 || n || intru)),r2,knl(s)) implies inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,b2,r2,(n2 || n || intru)) implies inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n2 || n || intru)) \in r2) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv13(s,a,b,b2,n,n2) implies inv13(gBasic(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(gNonce(s,r1),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(gNonce(s,r1),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(n2 || r3 || intru)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(n2 || r3 || intru)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv5(s,b2,r3,(n2 || r3 || intru)) implies inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(b2),(n2 || r3 || intru)) \in knl(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq a = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq b = intru .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = true .
  red inv2(s,a,a,b,r6) implies inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq n2 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n = r6 .
  eq (n2 = r5) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n = r6) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (b2 = r2) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv13(s,a,b,b2,n,n2) implies inv13(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv13(s,a,b,b2,n,n2) implies inv13(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> Time taken is 26606ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv14(init,a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg2(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg2(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg3(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(fkmsg3(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq a = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq b = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red lm1(n2,r2,knl(s)) implies inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n2 \in r2) = true .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n2 \in r2) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(intru)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g2(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(intru),dl1),r2,knl(s)) implies inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,intru,r2,dl1) implies inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = true .
  eq (n2 \in r2) = false .
  eq (n2 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n2 \in dl1) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(g21(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv14(s,a,b,n,n2,dl1) implies inv14(gBasic(s,r1,r2),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(gNonce(s,r1),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(gNonce(s,r1),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq a = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n2 = r3 .
  eq (r3 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n2 = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n2 = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r3) implies inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n2 = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq (n2 = r3) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (dl1 = (r1 || r3)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send1(s,r1,r2,r3),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq a = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n2 = r5 .
  eq (r5 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n2 = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true, use inv15 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n2 = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r5 || b))) \in nw(s)) = true .
  red inv15(s,a,b,r1,r3,n,r5) implies inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n2 = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r5 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n2 = r5) = false .
  eq n2 = r6 .
  eq (r6 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n2 = r5) = false .
  eq n2 = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n2 = r5) = false .
  eq n2 = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r6) implies inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n2 = r5) = false .
  eq n2 = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n2 = r5) = false .
  eq (n2 = r6) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (dl1 = (r5 || r6 || r3)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r3 = intru) = false .
  eq (r6 \in dl1) = true .
  eq (r6 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r3 = intru) = false .
  eq (r6 \in dl1) = true .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r3 = intru) = false .
  eq (r6 \in dl1) = true .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,intru,r6,dl1) implies inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r3 = intru) = false .
  eq (r6 \in dl1) = true .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r3 = intru) = false .
  eq (r6 \in dl1) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq a = r2 .
  eq (b = r3) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  eq (a = r2) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq a = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq b = intru .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = true .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true, use inv16 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = true .
  red inv16(s,a,b,r1,r2,n,r6,r5) implies inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq (n2 = r6) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq (r3 = intru) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (dl1 = r6) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv14(s,a,b,n,n2,dl1) implies inv14(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,dl1) .
close

--> Time taken is 29429ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv15(init,a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq a = intru .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n2)) .
  eq (aenc(pubK(r2),(intru || n2)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || n2))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true, use inv17 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n2)) .
  eq (aenc(pubK(r2),(intru || n2)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || n2))) \in nw(s)) = false .
  red inv17(s,a,b,r2,n,n2) implies inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n2)) .
  eq (aenc(pubK(r2),(intru || n2)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(intru || n2)) .
  eq (aenc(pubK(r2),(intru || n2)) \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 = aenc(pubK(r2),(intru || n2))) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq (b2 = r2) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a2 = intru) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g2(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(g21(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(gBasic(s,r1,r2),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(gNonce(s,r1),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(gNonce(s,r1),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq a = intru .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq b = intru .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || r3))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = true .
  eq (msg1(intru,intru,r2,aenc(pubK(r2),(intru || r3))) \in nw(s)) = false .
  red inv6(s,b,b,a,n,r3) implies inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq r1 = intru .
  eq (n2 = r3) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a2 = r1 .
  eq (b2 = r2) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a2 = r1) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send1(s,r1,r2,r3),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r6))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r6))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv2(s,a2,intru,b2,r6) implies inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg1(a2,intru,b2,aenc(pubK(b2),(intru || r6))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv15(s,a,b,a2,b2,n,n2) implies inv15(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2) .
close

--> Time taken is 378ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv16(init,a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq a = intru .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || intru)) .
  eq (aenc(pubK(r2),(n3 || n2 || intru)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(n3 || n2 || intru))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv18 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || intru)) .
  eq (aenc(pubK(r2),(n3 || n2 || intru)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(n3 || n2 || intru))) \in nw(s)) = false .
  red inv18(s,a,b,r2,n,n2,n3) implies inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || intru)) .
  eq (aenc(pubK(r2),(n3 || n2 || intru)) \in knl(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || intru)) .
  eq (aenc(pubK(r2),(n3 || n2 || intru)) \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq r1 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r3 = aenc(pubK(r2),(n3 || n2 || intru))) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = intru .
  eq (b2 = r2) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a2 = intru) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(gBasic(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(gNonce(s,r1),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(gNonce(s,r1),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n3 || r6 || intru))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n3 || r6 || intru))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,a2,intru,b2,n3,r6) implies inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(a2,intru,b2,aenc(pubK(b2),(n3 || r6 || intru))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq b = intru .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,intru,aenc(pubK(intru),(intru || r5))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,intru,aenc(pubK(intru),(intru || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(b,b,r2,aenc(pubK(r2),(n || r6 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(b,b,r2,aenc(pubK(r2),(n || r6 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv6(s,b,b,r2,n,r6) implies inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (msg2(b,b,r2,aenc(pubK(r2),(n || r6 || b))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n2 = r6) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq a2 = r3 .
  eq (b2 = r2) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq (a2 = r3) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq a = intru .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq b = intru .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = true .
  eq (msg2(intru,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv6(s,b,b,a,n,r6) implies inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n2 = r6) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r3 .
  eq (b2 = r2) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (a2 = r3) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv16(s,a,b,a2,b2,n,n2,n3) implies inv16(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> Time taken is 909ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv17(init,a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n2) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use inv0 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n2) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n2) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n2) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (intru || n2) .
  eq (intru \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq (r2 = (intru || n2)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(b2)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g2(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n2)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n2)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(b2),(intru || n2)),r2,knl(s)) implies inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n2)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,b2,r2,(intru || n2)) implies inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n2)) \in r2) = true .
  eq (aenc(pubK(b2),(intru || n2)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(intru || n2)) \in r2) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(g21(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv17(s,a,b,b2,n,n2) implies inv17(gBasic(s,r1,r2),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(gNonce(s,r1),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(gNonce(s,r1),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq a = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq b = intru .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r3) implies inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq n2 = r3 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(intru || r3)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r3 || b))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq r1 = intru .
  eq (n2 = r3) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq b2 = r2 .
  eq (r1 = intru) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (b2 = r2) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send1(s,r1,r2,r3),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(intru || r6)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(intru || r6)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,b2,r6,(intru || r6)) implies inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(intru || r6)) \in knl(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv17(s,a,b,b2,n,n2) implies inv17(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv17(s,a,b,b2,n,n2) implies inv17(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2) .
close

--> Time taken is 15953ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv18(init,a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true, use inv0 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || intru) .
  eq (intru \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = true .
  eq (r2 = (n3 || n2 || intru)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b2) .
  eq (pubK(b2) \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(b2)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(b2),(n3 || n2 || intru)),r2,knl(s)) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,b2,r2,(n3 || n2 || intru)) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in r2) = true .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b2),(n3 || n2 || intru)) \in r2) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(gBasic(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(gNonce(s,r1),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(gNonce(s,r1),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(n3 || r6 || intru)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(n3 || r6 || intru)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,b2,r6,(n3 || r6 || intru)) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(b2),(n3 || r6 || intru)) \in knl(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq b = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,intru,aenc(pubK(intru),(intru || r5))) \in nw(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,intru,aenc(pubK(intru),(intru || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,r2,aenc(pubK(r2),(n || r6 || b))) \in nw(s)) = true .
  red inv6(s,b,b,r2,n,r6) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (b = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,r2,aenc(pubK(r2),(n || r6 || b))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n2 = r6) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  eq (b2 = r2) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq a = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq b = intru .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = true .
  red inv6(s,b,b,a,n,r6) implies inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || intru)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || r6 || b))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (n2 = r6) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq b2 = r2 .
  eq (r3 = intru) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (b2 = r2) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv18(s,a,b,b2,n,n2,n3) implies inv18(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> Time taken is 23583ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv19(init,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true, use inv1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv1(s,a,b,n) implies inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n || n2 || b) .
  eq (b \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (r2 = (n || n2 || b)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(a)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a),(n || n2 || b)),r2,knl(s)) implies inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a,r2,(n || n2 || b)) implies inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n || n2 || b)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a),(n || n2 || b)) \in r2) = false .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv19(s,a,b,n,n2) implies inv19(gBasic(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r1),(r3 || n2 || r2)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r1),(r3 || n2 || r2)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r1),(r3 || n2 || r2)) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = false .
  red inv5(s,r1,r3,(r3 || n2 || r2)) implies inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (aenc(pubK(r1),(r3 || n2 || r2)) \in knl(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  red inv19(s,a,b,n,n2) implies inv19(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv19(s,a,b,n,n2) implies inv19(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv19(s,a,b,n,n2) implies inv19(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv19(s,a,b,n,n2) implies inv19(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv19(s,a,b,n,n2) implies inv19(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> Time taken is 9694ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op s : -> Sys .
  red inv2(init,a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(r1 || n)) .
  eq (aenc(pubK(r2),(r1 || n)) \in knl(s)) = true .
  eq (n \in unonce(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(r1 || n)) .
  eq (aenc(pubK(r2),(r1 || n)) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg1(intru,r1,r2,aenc(pubK(r2),(r1 || n))) \in nw(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(r1 || n)) .
  eq (aenc(pubK(r2),(r1 || n)) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg1(intru,r1,r2,aenc(pubK(r2),(r1 || n))) \in nw(s)) = false .
  red inv5(s,r2,n,(r1 || n)) implies inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(r1 || n)) .
  eq (aenc(pubK(r2),(r1 || n)) \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r3 = aenc(pubK(r2),(r1 || n))) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq (b = r2) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq (a2 = intru) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r1) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg2(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg2(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv2(s,a2,a,b,n) implies inv2(gBasic(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(gNonce(s,r1),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(gNonce(s,r1),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(send1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(send1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv2(s,a2,a,b,n) implies inv2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv2(s,a2,a,b,n) implies inv2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv2(s,a2,a,b,n) implies inv2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv2(s,a2,a,b,n) implies inv2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> Time taken is 365ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv20(init,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg2(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(fkmsg3(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq a = intru .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b) .
  eq (pubK(b) \in knl(s)) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b) .
  eq (pubK(b) \in knl(s)) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true, use inv0 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b) .
  eq (pubK(b) \in knl(s)) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b) .
  eq (pubK(b) \in knl(s)) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(b) .
  eq (pubK(b) \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(b)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq r2 = n2 .
  eq (n2 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (r2 = n2) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g2(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(b),n2),r2,knl(s)) implies inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,b,r2,n2) implies inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = true .
  eq (aenc(pubK(b),n2) \in knl(s)) = false .
  eq (msg3(a,a,b,aenc(pubK(b),n2)) \in nw(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(b),n2) \in r2) = false .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(g21(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv20(s,a,b,n,n2) implies inv20(gBasic(s,r1,r2),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(gNonce(s,r1),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send1(s,r1,r2,r3),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,r3,r6,r6) implies inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv20(s,a,b,n,n2) implies inv20(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq a = intru .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq a = r2 .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = false .
  eq (msg3(a,a,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true, use inv21 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = false .
  eq (msg3(a,a,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = true .
  red inv21(s,a,r3,r2,r1,n,r6,r5) implies inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq n2 = r6 .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = false .
  eq (msg3(a,a,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq b = r3 .
  eq (n2 = r6) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (b = r3) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv20(s,a,b,n,n2) implies inv20(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2) .
close

--> Time taken is 12933ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv21(init,a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq a = intru .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq a = r2 .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq r1 = intru .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r1 = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,a,aenc(pubK(a),(n || n2 || r1))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n3 || n2 || r1))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv22 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r1 = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,a,aenc(pubK(a),(n || n2 || r1))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n3 || n2 || r1))) \in nw(s)) = false .
  red inv22(s,a,r1,r2,n,n2,n3) implies inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r1 = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,a,aenc(pubK(a),(n || n2 || r1))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r1 = intru) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (a = intru) = false .
  eq (a = r2) = false .
  eq (r1 = intru) = false .
  eq (r3 = aenc(pubK(r2),(n3 || n2 || r1))) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq b = r1 .
  eq (b2 = intru) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a2 = r2 .
  eq (b = r1) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a2 = r2) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg2(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(fkmsg3(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g2(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(g21(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(gBasic(s,r1,r2),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(gNonce(s,r1),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(gNonce(s,r1),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send1(s,r1,r2,r3),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq a2 = r2 .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(b2,r3,a2,aenc(pubK(a2),(n3 || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(b2,r3,a2,aenc(pubK(a2),(n3 || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,b2,r3,a2,n3,r6) implies inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(b2,r3,a2,aenc(pubK(a2),(n3 || r6 || r3))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq a = intru .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,r3,r3,a,n,r6) implies inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq b2 = r3 .
  eq (n2 = r6) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq (b2 = r3) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq (b = r3) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (a2 = r2) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv21(s,a,b,a2,b2,n,n2,n3) implies inv21(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,b2,n,n2,n3) .
close

--> Time taken is 624ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv22(init,a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg1(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg1(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg2(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg2(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg3(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(fkmsg3(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = a2 .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq a = intru .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true, use inv0 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = true .
  eq (r2 = (n3 || n2 || b)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(a2) .
  eq (pubK(a2) \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(a2)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g2(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = a2 .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq a = intru .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq b = intru .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a2),(n3 || n2 || b)),r2,knl(s)) implies inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a2,r2,(n3 || n2 || b)) implies inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = a2) = false .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (aenc(pubK(a2),(n3 || n2 || b)) \in r2) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(g21(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(gBasic(s,r1,r2),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(gNonce(s,r1),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(gNonce(s,r1),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send1(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send1(s,r1,r2,r3),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq a2 = r2 .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(a2),(n3 || r6 || r3)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(a2),(n3 || r6 || r3)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,a2,r6,(n3 || r6 || r3)) implies inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (a2 = r2) = false .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(a2),(n3 || r6 || r3)) \in knl(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq a = intru .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = true .
  red inv6(s,r3,r3,a,n,r6) implies inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (a = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(r3,r3,a,aenc(pubK(a),(n || r6 || r3))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq b = r3 .
  eq (n2 = r6) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq a2 = r2 .
  eq (b = r3) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (a2 = r2) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send2(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv22(s,a,b,a2,n,n2,n3) implies inv22(send3(s,r1,r2,r3,r4,r5,r6),a,b,a2,n,n2,n3) .
close

--> Time taken is 20880ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op s : -> Sys .
  red inv23(init,a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg2(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg2(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),n) .
  eq (aenc(pubK(r2),n) \in knl(s)) = true .
  eq (n \in unonce(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),n) .
  eq (aenc(pubK(r2),n) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n)) \in nw(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),n) .
  eq (aenc(pubK(r2),n) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n)) \in nw(s)) = false .
  red inv5(s,r2,n,n) implies inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),n) .
  eq (aenc(pubK(r2),n) \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r3 = aenc(pubK(r2),n)) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq (b = r2) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq (a2 = intru) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r1) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(fkmsg3(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(g2(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(g21(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv23(s,a2,a,b,n) implies inv23(gBasic(s,r1,r2),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(gNonce(s,r1),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(gNonce(s,r1),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(send1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(send1(s,r1,r2,r3),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv23(s,a2,a,b,n) implies inv23(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq a2 = r2 .
  eq b = r3 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq a2 = r2 .
  eq b = r3 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = false .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq a2 = r2 .
  eq b = r3 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = false .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  red inv6(s,r1,r3,r2,r5,r6) implies inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq a2 = r2 .
  eq b = r3 .
  eq (n = r6) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq a2 = r2 .
  eq (b = r3) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq (a2 = r2) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv23(s,a2,a,b,n) implies inv23(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n) .
close

--> Time taken is 254ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv24(init,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg1(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg1(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg2(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg2(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg3(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(fkmsg3(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(g2(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(g2(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(g2(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(g21(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(g21(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(g21(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv24(s,a,b,n,n2,d2) implies inv24(gBasic(s,r1,r2),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(gNonce(s,r1),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(gNonce(s,r1),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send1(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send1(s,r1,r2,r3),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true, use inv23 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv23(s,r2,r2,r3,r6) implies inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (d2 = aenc(pubK(r3),r6)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq r2 = intru .
  eq (msg1(intru,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,intru,aenc(pubK(intru),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq r2 = intru .
  eq (msg1(intru,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,intru,aenc(pubK(intru),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq r2 = intru .
  eq (msg1(intru,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq n2 = r6 .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq n2 = r6 .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || n))) \in nw(s)) = true .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq n2 = r6 .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || n))) \in nw(s)) = false .
  eq n = r5 .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true, use inv25 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq n2 = r6 .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || n))) \in nw(s)) = false .
  eq (n = r5) = false .
  red inv25(s,r2,r3,r1,n,r6,r5) implies inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq n2 = r6 .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),n2) .
  eq (n2 = r6) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (d2 = aenc(pubK(r3),n2)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv24(s,a,b,n,n2,d2) implies inv24(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,d2) .
close

--> Time taken is 14925ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv25(init,a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq r1 = intru .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq n = n3 .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (n = n3) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n3 || n2 || r1))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true, use inv26 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (n = n3) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n3 || n2 || r1))) \in nw(s)) = false .
  red inv26(s,r2,r1,n,n2,n3) implies inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (n = n3) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = true .
  eq (msg2(r1,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (n = n3) = false .
  eq r3 = aenc(pubK(r2),(n3 || n2 || r1)) .
  eq (aenc(pubK(r2),(n3 || n2 || r1)) \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq b2 = intru .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (n = n3) = false .
  eq (r3 = aenc(pubK(r2),(n3 || n2 || r1))) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq b = r1 .
  eq (b2 = intru) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq (b = r1) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r2) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg2(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(fkmsg3(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g2(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(g21(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(gBasic(s,r1,r2),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(gNonce(s,r1),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(gNonce(s,r1),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send1(s,r1,r2,r3),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq n3 = r5 .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (msg2(b2,r3,r2,aenc(pubK(r2),(n3 || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (msg2(b2,r3,r2,aenc(pubK(r2),(n3 || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,b2,r3,r2,n3,r6) implies inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (msg2(b2,r3,r2,aenc(pubK(r2),(n3 || r6 || r3))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,r3,r3,r2,n,r6) implies inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq b2 = r3 .
  eq (n2 = r6) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq (b2 = r3) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send2(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op b2 : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv25(s,a,b,b2,n,n2,n3) implies inv25(send3(s,r1,r2,r3,r4,r5,r6),a,b,b2,n,n2,n3) .
close

--> Time taken is 442ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op s : -> Sys .
  red inv26(init,a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg1(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg1(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg2(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg2(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg3(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(fkmsg3(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq a = intru .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq n = n3 .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true, use inv0 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  red inv0(s,a,b,n,n2) implies inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = true .
  eq (n3 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = true .
  eq (n2 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq r2 = (n3 || n2 || b) .
  eq (b \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (r2 = (n3 || n2 || b)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (r1 = pubK(a)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g2(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq n = n3 .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a),(n3 || n2 || b)),r2,knl(s)) implies inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a,r2,(n3 || n2 || b)) implies inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in r2) = true .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in knl(s)) = false .
  eq (msg2(b,b,a,aenc(pubK(a),(n || n2 || b))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n = n3) = false .
  eq (aenc(pubK(a),(n3 || n2 || b)) \in r2) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(g21(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv26(s,a,b,n,n2,n3) implies inv26(gBasic(s,r1,r2),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(gNonce(s,r1),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(gNonce(s,r1),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send1(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send1(s,r1,r2,r3),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq n3 = r5 .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (aenc(pubK(r2),(n3 || r6 || r3)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (aenc(pubK(r2),(n3 || r6 || r3)) \in knl(s)) = true .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,r2,r6,(n3 || r6 || r3)) implies inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (n3 = r5) = false .
  eq (aenc(pubK(r2),(n3 || r6 || r3)) \in knl(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = true .
  red inv6(s,r3,r3,r2,n,r6) implies inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq n3 = r5 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(n || r6 || r3))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq n2 = r6 .
  eq (n3 = r5) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  eq (n2 = r6) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv26(s,a,b,n,n2,n3) implies inv26(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op n3 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv26(s,a,b,n,n2,n3) implies inv26(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,n2,n3) .
close

--> Time taken is 14346ms--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op s : -> Sys .
  red inv3(init,n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv3(s,n) implies inv3(fkmsg1(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv3(s,n) implies inv3(fkmsg1(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv3(s,n) implies inv3(fkmsg2(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv3(s,n) implies inv3(fkmsg2(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv3(s,n) implies inv3(fkmsg3(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv3(s,n) implies inv3(fkmsg3(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv3(s,n) implies inv3(g2(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv3(s,n) implies inv3(g2(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv3(s,n) implies inv3(g2(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = true .
  red inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (n \in unonce(s)) = true .
  red inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (n \in unonce(s)) = false .
  red inv5(s,r1,n,r2) implies inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in r2) = false .
  red inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv3(s,n) implies inv3(g21(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv3(s,n) implies inv3(gBasic(s,r1,r2),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv3(s,n) implies inv3(gNonce(s,r1),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv3(s,n) implies inv3(gNonce(s,r1),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv3(s,n) implies inv3(send1(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv3(s,n) implies inv3(send1(s,r1,r2,r3),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv3(s,n) implies inv3(send2(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv3(s,n) implies inv3(send2(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv3(s,n) implies inv3(send2(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv3(s,n) implies inv3(send2(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv3(s,n) implies inv3(send3(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv3(s,n) implies inv3(send3(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv3(s,n) implies inv3(send3(s,r1,r2,r3,r4,r5,r6),n) .
close

--> true
open INV .
  :id(nslpk)
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv3(s,n) implies inv3(send3(s,r1,r2,r3,r4,r5,r6),n) .
close

--> Time taken is 200ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op s : -> Sys .
  red inv4(init,a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg2(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg2(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg3(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(fkmsg3(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq a = intru .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq b = intru .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  red lm1(n,r2,knl(s)) implies inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),r2) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = true .
  eq (n \in r2) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq r1 = pubK(intru) .
  eq (pubK(intru) \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r1 = pubK(intru)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g2(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = true .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(intru),dl1),r2,knl(s)) implies inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,intru,r2,dl1) implies inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = true .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || n))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = true .
  eq (n \in r2) = false .
  eq (n \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in r2) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (n \in dl1) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(g21(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv4(s,a,b,n,dl1) implies inv4(gBasic(s,r1,r2),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(gNonce(s,r1),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(gNonce(s,r1),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq a = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq b = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n = r3 .
  eq (r3 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = true .
  red inv2(s,a,a,b,r3) implies inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq n = r3 .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r1 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r3))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r1 || r3) .
  eq (n = r3) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq r2 = intru .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (dl1 = (r1 || r3)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r3 \in dl1) = true .
  eq (r3 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r3 \in dl1) = true .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r3 \in dl1) = true .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  red inv5(s,intru,r3,dl1) implies inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r3 \in dl1) = true .
  eq (r3 \in knl(s)) = false .
  eq (aenc(pubK(intru),dl1) \in knl(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r3 \in dl1) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (r2 = intru) = false .
  eq (a = r1) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send1(s,r1,r2,r3),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq a = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq b = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true, use inv10 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r5))) \in nw(s)) = true .
  red inv10(s,a,b,r1,r3,r5) implies inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r5))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  eq n = r6 .
  eq (r6 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  eq n = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  eq n = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = true .
  red inv2(s,a,a,b,r6) implies inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  eq n = r6 .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),(r5 || r6 || r3)) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  eq (n = r6) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (dl1 = (r5 || r6 || r3)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (r2 = intru) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send2(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq a = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq (a = intru) = false .
  eq b = intru .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = true .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true, use inv12 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = true .
  red inv12(s,a,b,r1,r2,r6,r5) implies inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq n = r6 .
  eq (a = intru) = false .
  eq (b = intru) = false .
  eq (r6 \in knl(s)) = false .
  eq (aenc(pubK(intru),r6) \in knl(s)) = false .
  eq (msg1(a,a,b,aenc(pubK(b),(a || r6))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = true .
  eq (n = r6) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,intru,r2,aenc(pubK(r2),(r5 || r6 || intru))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq r3 = intru .
  eq (msg1(r2,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq dl1 = r6 .
  eq (r3 = intru) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (dl1 = r6) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv4(s,a,b,n,dl1) implies inv4(send3(s,r1,r2,r3,r4,r5,r6),a,b,n,dl1) .
close

--> Time taken is 25382ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op s : -> Sys .
  red inv5(init,a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(fkmsg1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(fkmsg1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(fkmsg2(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(fkmsg2(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(fkmsg3(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(fkmsg3(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),r2) \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true, use inv3 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),r2) \in knl(s)) = false .
  eq (n \in knl(s)) = true .
  red inv3(s,n) implies inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (n \in r2) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),r2) \in knl(s)) = false .
  eq (n \in knl(s)) = false .
  red lm1(n,r2,knl(s)) implies inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (n \in r2) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (r1 = pubK(a)) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(g2(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = true .
  eq (n \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(a),dl1) \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a),dl1),r2,knl(s)) implies inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a,r2,dl1) implies inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = true .
  eq (n \in unonce(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = false .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (n \in dl1) = false .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(g21(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv5(s,a,n,dl1) implies inv5(gBasic(s,r1,r2),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(gNonce(s,r1),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(gNonce(s,r1),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq n = r3 .
  red inv5(s,a,n,dl1) implies inv5(send1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq (n = r3) = false .
  eq dl1 = (r1 || r3) .
  red inv5(s,a,n,dl1) implies inv5(send1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq (n = r3) = false .
  eq (dl1 = (r1 || r3)) = false .
  red inv5(s,a,n,dl1) implies inv5(send1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r2) = false .
  red inv5(s,a,n,dl1) implies inv5(send1(s,r1,r2,r3),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq n = r6 .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq r5 = r6 .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r6))) \in nw(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq r5 = r6 .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r6))) \in nw(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq n = r5 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = false .
  eq (aenc(pubK(r2),(r5 || r6 || r3)) \in knl(s)) = false .
  red inv2(s,r1,r2,r3,r5) implies inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq dl1 = (r5 || r6 || r3) .
  eq (n = r5) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (n = r6) = false .
  eq (dl1 = (r5 || r6 || r3)) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv5(s,a,n,dl1) implies inv5(send2(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = true .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  eq n = r6 .
  eq (r6 \in unonce(s)) = false .
  eq (aenc(pubK(r3),r6) \in knl(s)) = false .
  red inv6(s,r1,r3,r2,r5,r6) implies inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  eq (n = r6) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq (dl1 = r6) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r3) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op dl1 : -> DataL .
  op n : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv5(s,a,n,dl1) implies inv5(send3(s,r1,r2,r3,r4,r5,r6),a,n,dl1) .
close

--> Time taken is 3835ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red inv6(init,a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (n \in unonce(s)) = true .
  eq (n2 \in unonce(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (n \in unonce(s)) = true .
  eq (n2 \in unonce(s)) = false .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (n \in unonce(s)) = true .
  eq (n2 \in unonce(s)) = false .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  red inv5(s,r2,n2,(n || n2 || r1)) implies inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true, use inv5 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (n \in unonce(s)) = false .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  red inv5(s,r2,n,(n || n2 || r1)) implies inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (r3 = aenc(pubK(r2),(n || n2 || r1))) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq (b = r2) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq (a2 = intru) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r1) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(g2(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(g2(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(g2(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(g21(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(g21(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(g21(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv6(s,a2,a,b,n,n2) implies inv6(gBasic(s,r1,r2),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(gNonce(s,r1),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(gNonce(s,r1),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send1(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send1(s,r1,r2,r3),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq n2 = r6 .
  eq r5 = r6 .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r6))) \in nw(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq n2 = r6 .
  eq r5 = r6 .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r6))) \in nw(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true, use inv2 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r5 = r6) = false .
  eq (r5 \in unonce(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv2(s,r1,r2,r3,r5) implies inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq b = r2 .
  eq (n = r5) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq a2 = r3 .
  eq (b = r2) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r3 .
  eq (a2 = r3) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r3) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv6(s,a2,a,b,n,n2) implies inv6(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv6(s,a2,a,b,n,n2) implies inv6(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2) .
close

--> Time taken is 257ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op s : -> Sys .
  red inv7(init,a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg2(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg2(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg3(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(fkmsg3(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  red inv7(s,a,b,dl1,dl2) implies inv7(g2(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(g2(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g2(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g2(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g2(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(b),dl2) \in dl1) = true .
  eq (dl1 \in (r2 || knl(s))) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(b),dl2) \in dl1) = true .
  eq (dl1 \in (r2 || knl(s))) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(b),dl2) \in dl1) = true .
  eq (dl1 \in (r2 || knl(s))) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a),dl1),r2,knl(s)) implies inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(b),dl2) \in dl1) = true .
  eq (dl1 \in (r2 || knl(s))) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a,r2,dl1) implies inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (aenc(pubK(b),dl2) \in dl1) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (dl1 \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in r2) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(g21(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(gBasic(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(gBasic(s,r1,r2),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(gNonce(s,r1),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(gNonce(s,r1),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(gNonce(s,r1),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq dl1 = (r1 || r3) .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq (dl1 = (r1 || r3)) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq (dl1 = (r1 || r3)) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r2) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r2) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send1(s,r1,r2,r3),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq dl1 = (r5 || r6 || r3) .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (dl1 = (r5 || r6 || r3)) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (dl1 = (r5 || r6 || r3)) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq (dl1 = r6) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq (dl1 = r6) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r3) = false .
  eq (dl1 \in knl(s)) = true .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r3) = false .
  eq (dl1 \in knl(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op dl2 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv7(s,a,b,dl1,dl2) implies inv7(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1,dl2) .
close

--> Time taken is 8146ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op s : -> Sys .
  red inv8(init,a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv8(s,a) implies inv8(fkmsg1(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv8(s,a) implies inv8(fkmsg1(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv8(s,a) implies inv8(fkmsg2(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv8(s,a) implies inv8(fkmsg2(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv8(s,a) implies inv8(fkmsg3(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv8(s,a) implies inv8(fkmsg3(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red inv8(s,a) implies inv8(g2(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv8(s,a) implies inv8(g2(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv8(s,a) implies inv8(g2(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq a = intru .
  red inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (priK(a) \in r2) = true .
  eq (priK(a) \in knl(s)) = true .
  red inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true, use inv9 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (priK(a) \in r2) = true .
  eq (priK(a) \in knl(s)) = false .
  red inv9(s,r1,a,r2) implies inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (a = intru) = false .
  eq (priK(a) \in r2) = false .
  red inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv8(s,a) implies inv8(g21(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv8(s,a) implies inv8(gBasic(s,r1,r2),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv8(s,a) implies inv8(gNonce(s,r1),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv8(s,a) implies inv8(gNonce(s,r1),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv8(s,a) implies inv8(send1(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red inv8(s,a) implies inv8(send1(s,r1,r2,r3),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv8(s,a) implies inv8(send2(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red inv8(s,a) implies inv8(send2(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv8(s,a) implies inv8(send2(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv8(s,a) implies inv8(send2(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red inv8(s,a) implies inv8(send3(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv8(s,a) implies inv8(send3(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv8(s,a) implies inv8(send3(s,r1,r2,r3,r4,r5,r6),a) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv8(s,a) implies inv8(send3(s,r1,r2,r3,r4,r5,r6),a) .
close

--> Time taken is 226ms--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op s : -> Sys .
  red inv9(init,a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(fkmsg1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(fkmsg1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(fkmsg2(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(fkmsg2(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(fkmsg3(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(fkmsg3(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (priK(b) \in r2) = true .
  eq (priK(b) \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (priK(b) \in r2) = true .
  eq (priK(b) \in knl(s)) = false .
  eq (aenc(pubK(a),r2) \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (priK(b) \in r2) = true .
  eq (priK(b) \in knl(s)) = false .
  eq (aenc(pubK(a),r2) \in knl(s)) = false .
  red lm1(priK(b),r2,knl(s)) implies inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = true .
  eq (priK(b) \in r2) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq r1 = pubK(a) .
  eq (pubK(a) \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq dl1 = r2 .
  eq (r1 = pubK(a)) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  eq (dl1 = r2) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(g2(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = true .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (priK(b) \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (priK(b) \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true, use lm1 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (priK(b) \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = true .
  red lm1(aenc(pubK(a),dl1),r2,knl(s)) implies inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true, use inv7 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = false .
  eq (aenc(pubK(a),dl1) \in r2) = true .
  eq (priK(b) \in knl(s)) = false .
  eq (aenc(pubK(a),dl1) \in knl(s)) = false .
  eq (r2 \in knl(s)) = false .
  red inv7(s,r1,a,r2,dl1) implies inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = true .
  eq (priK(b) \in r2) = false .
  eq (aenc(pubK(a),dl1) \in r2) = false .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  eq (priK(b) \in dl1) = false .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(g21(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red inv9(s,a,b,dl1) implies inv9(gBasic(s,r1,r2),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(gNonce(s,r1),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(gNonce(s,r1),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(send1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq dl1 = (r1 || r3) .
  red inv9(s,a,b,dl1) implies inv9(send1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r2 .
  eq (dl1 = (r1 || r3)) = false .
  red inv9(s,a,b,dl1) implies inv9(send1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r2) = false .
  red inv9(s,a,b,dl1) implies inv9(send1(s,r1,r2,r3),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq dl1 = (r5 || r6 || r3) .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (dl1 = (r5 || r6 || r3)) = false .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red inv9(s,a,b,dl1) implies inv9(send2(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq dl1 = r6 .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq a = r3 .
  eq (dl1 = r6) = false .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  eq (a = r3) = false .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op b : -> Prin .
  op dl1 : -> DataL .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red inv9(s,a,b,dl1) implies inv9(send3(s,r1,r2,r3,r4,r5,r6),a,b,dl1) .
close
--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red auth(init,a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq r1 = intru .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (msg1(r2,r2,r1,aenc(pubK(r1),(r2 || n))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (msg1(r2,r2,r1,aenc(pubK(r1),(r2 || n))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  eq (msg2(r1,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true, use inv19 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (msg1(r2,r2,r1,aenc(pubK(r1),(r2 || n))) \in nw(s)) = true .
  eq (msg2(intru,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  eq (msg2(r1,r1,r2,aenc(pubK(r2),(n || n2 || r1))) \in nw(s)) = false .
  red inv19(s,r2,r1,n,n2) implies auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = true .
  eq (msg1(r2,r2,r1,aenc(pubK(r1),(r2 || n))) \in nw(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),(n || n2 || r1)) .
  eq (aenc(pubK(r2),(n || n2 || r1)) \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq d = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (r3 = aenc(pubK(r2),(n || n2 || r1))) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq b = r1 .
  eq (d = r3) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq a2 = intru .
  eq (b = r1) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r2 .
  eq (a2 = intru) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r2) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(g2(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(g2(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(g2(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(g21(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(g21(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(g21(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red auth(s,a2,a,b,n,n2,d) implies auth(gBasic(s,r1,r2),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(gNonce(s,r1),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(gNonce(s,r1),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq r1 = intru .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq d = aenc(pubK(r1),(r3 || n2 || r2)) .
  eq (msg2(a2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq d = aenc(pubK(r1),(r3 || n2 || r2)) .
  eq (msg2(a2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true, use inv6 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq d = aenc(pubK(r1),(r3 || n2 || r2)) .
  eq (msg2(a2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = true .
  eq (msg1(r1,r1,r2,aenc(pubK(r2),(r1 || r3))) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = false .
  red inv6(s,a2,r2,r1,r3,n2) implies auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq d = aenc(pubK(r1),(r3 || n2 || r2)) .
  eq (msg2(a2,r2,r1,aenc(pubK(r1),(r3 || n2 || r2))) \in nw(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq n = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (d = aenc(pubK(r1),(r3 || n2 || r2))) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq b = r2 .
  eq (n = r3) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq a = r1 .
  eq (b = r2) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  eq (a = r1) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send1(s,r1,r2,r3),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red auth(s,a2,a,b,n,n2,d) implies auth(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red auth(s,a2,a,b,n,n2,d) implies auth(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op s : -> Sys .
  red auth2(init,a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg1(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg2(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq r1 = intru .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq r2 = intru .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),n2) .
  eq (aenc(pubK(r2),n2) \in knl(s)) = true .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),n2) .
  eq (aenc(pubK(r2),n2) \in knl(s)) = true .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = false .
  eq (msg3(r1,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true, use inv20 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),n2) .
  eq (aenc(pubK(r2),n2) \in knl(s)) = true .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = false .
  eq (msg3(r1,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(n || n2 || r2))) \in nw(s)) = true .
  red inv20(s,r1,r2,n,n2) implies auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),n2) .
  eq (aenc(pubK(r2),n2) \in knl(s)) = true .
  eq (msg3(intru,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = false .
  eq (msg3(r1,r1,r2,aenc(pubK(r2),n2)) \in nw(s)) = false .
  eq (msg2(r2,r2,r1,aenc(pubK(r1),(n || n2 || r2))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq r3 = aenc(pubK(r2),n2) .
  eq (aenc(pubK(r2),n2) \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq d2 = r3 .
  eq (r1 = intru) = false .
  eq (r2 = intru) = false .
  eq (r3 = aenc(pubK(r2),n2)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq b = r2 .
  eq (d2 = r3) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq a2 = intru .
  eq (b = r2) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq a = r1 .
  eq (a2 = intru) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = true .
  eq (a = r1) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Data .
  op s : -> Sys .
  eq (r3 \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(fkmsg3(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g2(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = true .
  eq (r2 \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g2(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Data .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (r1 \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g2(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g21(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = true .
  eq (aenc(pubK(r1),r2) \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g21(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> DataL .
  op s : -> Sys .
  eq (priK(r1) \in knl(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(g21(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> PubKey .
  op s : -> Sys .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(gBasic(s,r1,r2),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(gNonce(s,r1),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Nonce .
  op s : -> Sys .
  eq (r1 \in unonce(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(gNonce(s,r1),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send1(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Nonce .
  op s : -> Sys .
  eq (r3 \in unonce(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send1(s,r1,r2,r3),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq r2 = intru .
  eq (msg1(r1,intru,r3,aenc(pubK(r3),(intru || r5))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq r3 = intru .
  eq (msg1(r1,r2,intru,aenc(pubK(intru),(r2 || r5))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(a2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(a2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true, use inv23 as a lemma
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(a2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = true .
  eq (msg3(r2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  eq (msg2(r3,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red inv23(s,a2,r2,r3,r6) implies auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq d2 = aenc(pubK(r3),r6) .
  eq (msg3(a2,r2,r3,aenc(pubK(r3),r6)) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq n2 = r6 .
  eq (r2 = intru) = false .
  eq (r3 = intru) = false .
  eq (d2 = aenc(pubK(r3),r6)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq n = r5 .
  eq (n2 = r6) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq b = r3 .
  eq (n = r5) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq a = r2 .
  eq (b = r3) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (a = r2) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r3),(r2 || r5)) .
  eq (r6 \in unonce(s)) = false .
  eq (msg1(r1,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r3),(r2 || r5))) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send2(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = true .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = true .
  eq (msg2(r1,r3,r2,aenc(pubK(r2),(r5 || r6 || r3))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq r4 = aenc(pubK(r2),(r5 || r6 || r3)) .
  eq (msg1(r2,r2,r3,aenc(pubK(r3),(r2 || r5))) \in nw(s)) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close

--> true
open INV .
  :id(nslpk)
  op a : -> Prin .
  op a2 : -> Prin .
  op b : -> Prin .
  op d2 : -> Data .
  op n : -> Nonce .
  op n2 : -> Nonce .
  op r1 : -> Prin .
  op r2 : -> Prin .
  op r3 : -> Prin .
  op r4 : -> Data .
  op r5 : -> Nonce .
  op r6 : -> Nonce .
  op s : -> Sys .
  eq (r4 = aenc(pubK(r2),(r5 || r6 || r3))) = false .
  red auth2(s,a2,a,b,n,n2,d2) implies auth2(send3(s,r1,r2,r3,r4,r5,r6),a2,a,b,n,n2,d2) .
close